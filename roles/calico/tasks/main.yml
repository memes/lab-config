# Install Calico as CNI
# yamllint disable rule:truthy rule:line-length
---
- vars:
    bgp_peer: "{{ hostvars[groups['servers'][0]]['vlan100_addresses'] | ansible.utils.ipv4 | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') | first }}"
- name: Check for NetworkManager conf.d
  ansible.builtin.stat:
    path: /etc/NetworkManager/conf.d
  register: nm_conf_d
  tags:
    - base
- name: Add NetworkManager override for Calico
  ansible.builtin.template:
    src: templates/kubernetes/nm-calico.conf.j2
    dest: /etc/NetworkManager/conf.d/calico.conf
    owner: root
    group: root
    mode: '0644'
  when: nm_conf_d.stat.isdir is defined and nm_conf_d.stat.isdir
  tags:
    - base
- name: Reload NetworkManager configuration
  ansible.builtin.command: nmcli connection reload
  when: nm_conf_d.stat.isdir is defined and nm_conf_d.stat.isdir
  tags:
    - base
- name: Install calicoctl
  ansible.builtin.shell: |
    curl -sLo /run/calicoctl https://github.com/projectcalico/calico/releases/download/{{ calico_version }}/calicoctl-linux-amd64 && chmod 0755 /run/calicoctl && mv /run/calicoctl /usr/local/bin/calicoctl
  args:
    creates: /usr/local/bin/calicoctl
  when: k8s_master | default(False)
  tags:
    - base
- name: Create tigera-operator namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: tigera-operator
  tags:
    - init
- name: Configure Calico to replace kube-proxy
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: kubernetes-services-endpoint
        namespace: tigera-operator
      data:
        KUBERNETES_SERVICE_HOST: "{{ kubernetes_api_address }}"
        KUBERNETES_SERVICE_PORT: "{{ kubernetes_api_port | default(6443) }}"
  tags:
    - init
- name: Install Tigera operator
  ansible.builtin.command: kubectl apply -f https://projectcalico.docs.tigera.io/manifests/tigera-operator.yaml
  tags:
    - init
- name: Wait for Tigera operator to be ready
  kubernetes.core.k8s_info:
    kind: Deployment
    namespace: tigera-operator
    name: tigera-operator
  register: operator_ready
  until: operator_ready.resources | json_query('[*].status.conditions[?reason==`MinimumReplicasAvailable`][].status') | select('match','True') | list | length >= 1
  delay: 10
  retries: 6
  tags:
    - init
- name: Customise Calico installation
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: operator.tigera.io/v1
      kind: Installation
      metadata:
        name: default
      spec:
        calicoNetwork:
          linuxDataplane: BPF
          bgp: Enabled
          ipPools:
            - cidr: "{{ kubernetes_pod_cidr | default('10.0.0.0/16') }}"
              encapsulation: None
              natOutgoing: Enabled
              nodeSelector: all()
              blockSize: 24
          nodeAddressAutodetectionV4:
            canReach: "{{ bgp_peer }}"
  tags:
    - config
- name: Enable Calico API server
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: operator.tigera.io/v1
      kind: APIServer
      metadata:
        name: default
      spec: {}
  tags:
    - config
- name: Wait for Calico to be ready
  kubernetes.core.k8s_info:
    kind: TigeraStatus
    name: calico
  register: calico_ready
  until: calico_ready.resources | json_query('[*].status.conditions[?type==`Available`][].status') | select('match','True') | list | length >= 1
  delay: 10
  retries: 12
  tags:
    - config
- name: Ensure Calico API server is ready
  kubernetes.core.k8s_info:
    kind: TigeraStatus
    name: apiserver
  register: calico_ready
  until: calico_ready.resources | json_query('[*].status.conditions[?type==`Available`][].status') | select('match','True') | list | length >= 1
  delay: 5
  retries: 5
  tags:
    - config
- name: Set Calico BGPPeer to upstream router
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: projectcalico.org/v3
      kind: BGPPeer
      metadata:
        name: router-ipv4-peer
      spec:
        peerIP: "{{ bgp_peer }}"
        asNumber: "{{ bgp_peer_asn | default('64512') }}"
  tags:
    - bgp
- name: Update Calico BGPConfiguration
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: projectcalico.org/v3
      kind: BGPConfiguration
      metadata:
        name: default
      spec:
        logSeverityScreen: Info
        nodeToNodeMeshEnabled: false
        asNumber: "{{ bgp_asn | default('64513') }}"
        listenPort: 179
        serviceClusterIPs:
          - cidr: "{{ kubernetes_service_cidr | default('10.1.0.0/22') }}"
        serviceExternalIPs:
          - cidr: "{{ kubernetes_external_cidr | default('10.2.0.0/24') }}"
        serviceLoadBalancerIPs:
          - cidr: "{{ kubernetes_lb_cidr | default('10.3.0.0/24') }}"
  tags:
    - bgp
