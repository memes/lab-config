# Setup static vlan configurations post-deployment
# yamllint disable rule:line-length
---
- name: Configure VLANs on Ubuntu
  vars:
    device: "{{ dataplane_device }}"
    vlan: "{{ item.key }}"
    addresses: "{{ item.value['addresses'] }}"
    routes: "{{ item.value['routes'] | default({}) }}"
  ansible.builtin.template:
    src: templates/netplan-vlan.yaml.j2
    dest: "/etc/netplan/20-vlan{{ item.key }}.yaml"
    owner: root
    group: root
    mode: '0640'
  when: ansible_distribution == "Ubuntu" and (vlans | default({}) | length > 0)
  loop: "{{ vlans | dict2items }}"
  notify:
    - Validate netplan
- name: Configure VLANs on CentOS/RHEL
  ansible.builtin.command: >-
    nmcli connection modify {{ dataplane_device }}.{{ item.key }}{% if item.value['addresses'] | default([]) | ansible.utils.ipv4('host/prefix') | length > 0 %}
      ipv4.method manual
      ipv4.never-default yes
      ipv4.addresses "{{ item.value['addresses'] | default([]) | ansible.utils.ipv4('host/prefix') | join(',') }}"
      ipv4.routes "{% for address in item.value['addresses'] | default([]) | ansible.utils.ipv4 %}{% if loop.index > 1 %},{% endif %}{{ address | ansible.utils.ipaddr('host/prefix') | ansible.utils.ipaddr('0') }} {{ address | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') }}{% endfor %}{% for route in item.value['routes'] | default({}) | selectattr('route', 'ansible.utils.ipv4') %},{{ route['route'] }} {{ route['gw'] }}{% endfor %}"{% endif %}{% if item.value['addresses'] | ansible.utils.ipv6 | length > 0 %}
      ipv6.method manual
      ipv6.never-default yes
      ipv6.addresses "{{ item.value['addresses'] | default([]) | ansible.utils.ipv6 | join(',') }}"
      ipv6.routes "{% for address in item.value['addresses'] | default([]) | ansible.utils.ipv6 %}{% if loop.index > 1 %},{% endif %}{{ address | ansible.utils.ipaddr('0') }} {{ address | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') }}{% endfor %}{% for route in item.value['routes'] | default({}) | selectattr('route', 'ansible.utils.ipv6') %},{{ route['route'] }} {{ route['gw'] }}{% endfor %}"{% endif %}
  when: ansible_os_family == "RedHat" and (vlans | default({}) | length > 0)
  loop: "{{ vlans | dict2items }}"
  changed_when: true
  notify:
    - Update con
